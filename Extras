# views.py
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
from django.core.files.storage import default_storage
import os
from rest_framework.decorators import api_view, authentication_classes, permission_classes
from rest_framework.authentication import TokenAuthentication
from rest_framework.permissions import IsAuthenticated

@csrf_exempt
@api_view(['POST'])
@authentication_classes([TokenAuthentication])  # Optional: Add authentication
@permission_classes([IsAuthenticated])          # Optional: Add permission
def receive_file(request):
    if 'file' not in request.FILES:
        return JsonResponse({'error': 'No file provided'}, status=400)
        
    try:
        file = request.FILES['file']
        
        # Validate file type if needed
        allowed_types = ['.pdf', '.doc', '.docx']  # Add your allowed types
        file_extension = os.path.splitext(file.name)[1].lower()
        
        if allowed_types and file_extension not in allowed_types:
            return JsonResponse({
                'error': f'Invalid file type. Allowed types: {", ".join(allowed_types)}'
            }, status=400)
            
        # Save the file
        file_path = default_storage.save(f'received_files/{file.name}', file)
        
        return JsonResponse({
            'message': 'File received successfully',
            'file_name': file.name,
            'file_size': file.size,
            'file_path': file_path
        })
        
    except Exception as e:
        return JsonResponse({'error': str(e)}, status=500)

# Second Server (Receiver)
# urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('api/receive-file/', views.receive_file, name='receive_file'),
]

# settings.py (for both servers)
"""
# Media settings
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Create directory for received files
RECEIVED_FILES_DIR = os.path.join(MEDIA_ROOT, 'received_files')
os.makedirs(RECEIVED_FILES_DIR, exist_ok=True)
"""